#!/usr/bin/python3

# this goes in /usr/sbin/shellinabox_import_from_certbot

# Copyright (C) 2017 Alexandre Detiste <alexandre@detiste.be>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# You can find the GPL license text on a Debian system under
# /usr/share/common-licenses/GPL-2.

import grp
import os
import pwd
import subprocess

if 'DEBUG' in os.environ:
    debug = print
else:
    debug = lambda *args, **kwargs: None

SOURCE='/etc/letsencrypt/live/'
DEST='/var/lib/shellinabox/'

source={}
debug('SOURCE')
for domain in next(os.walk(SOURCE))[1]:
     mtime=os.path.getmtime(os.path.join(SOURCE, domain, 'cert.pem'))
     debug(domain, mtime)
     source[domain]=mtime

dest={}
debug('TO')
for filename in next(os.walk(DEST))[2]:
    domain=filename[12:-4]
    if not domain:
        continue
    mtime=os.path.getmtime(os.path.join(DEST, filename))
    debug(domain, mtime)
    dest[domain]=mtime

debug('RIGHT INNER JOIN')
updated=False
for domain, mtime in dest.items():
    if domain not in source:
        continue
    if source[domain] < mtime:
        continue
    updated=True
    print('Updating domain %s...' % domain)
    pem=os.path.join(DEST,'certificate-%s.pem' % domain)
    with open(pem, 'w') as out:
        out.write(open(os.path.join(SOURCE, domain, 'privkey.pem'), 'r').read())
        out.write(open(os.path.join(SOURCE, domain, 'cert.pem'), 'r').read())
    os.chown(pem,
             pwd.getpwnam('shellinabox').pw_uid,
             grp.getgrnam('shellinabox').gr_gid)
    os.chmod(pem, 0o600)

if updated:
    print('Restarting ShellInABox')
    subprocess.check_call(['systemctl', 'try-restart', 'shellinabox'])
